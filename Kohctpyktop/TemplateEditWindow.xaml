<Window x:Class="Kohctpyktop.TemplateEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:opts="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        xmlns:local="clr-namespace:Kohctpyktop"
        xmlns:converters="clr-namespace:Kohctpyktop.Converters"
        xmlns:viewModels="clr-namespace:Kohctpyktop.ViewModels"
        xmlns:controls="clr-namespace:Kohctpyktop.Controls"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:valuesFunctions="clr-namespace:Kohctpyktop.Models.Field.ValuesFunctions;assembly=Kohctpyktop.Core"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:TemplateEditViewModel}"
        Title="TemplateEditWindow" Height="650" Width="800"
        x:Name="Window"
        KeyDown="WindowKeyDown">
    <Window.Resources>
        <converters:ParEqualityToVisibilityConverter x:Key="ParEqualityToVisibilityConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <local:TemplateCanvasTemplateSelector x:Key="TemplateSelector"/>
        <local:TemplateCanvasStyleSelector x:Key="StyleSelector"/>
        <local:TemplateCanvasPropertyGridTemplateSelector x:Key="PropertyGridTemplateSelector"/>
        <converters:CellSizeConverter x:Key="CellSizeConverter"/>
        <converters:CellOffsetConverter x:Key="CellOffsetConverter"/>
        
        <CollectionViewSource Source="{Binding Pins}" x:Key="PinsCollection"/>
        <CollectionViewSource Source="{Binding DeadZones}" x:Key="DeadZonesCollection"/>
    </Window.Resources>
    <DockPanel>
        <TabControl DockPanel.Dock="Top">
            <TabControl.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource TabBarButton}"/>
                <Style TargetType="Label" BasedOn="{StaticResource TabBarLabel}"/>
            </TabControl.Resources>
            <TabItem Header="Edit">
                <StackPanel Orientation="Horizontal">
                    <StackPanel>
                        <Label>File</Label>
                        <Button Content="Open"/>
                        <Button Content="Save"/>
                    </StackPanel>
                    <Border Style="{StaticResource Separator}"></Border>
                    <StackPanel>
                        <Label>Add</Label>
                        <Button Content="Pin" Click="AddPin"/>
                        <Button Content="Dead Zone" Click="AddDeadZone"/>
                    </StackPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height=".5*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ItemsControl
                x:Name="ItemsCanvas"
                Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" 
                Width="{Binding Width, Converter={StaticResource CellSizeConverter}}" 
                Height="{Binding Height, Converter={StaticResource CellSizeConverter}}"
                VerticalAlignment="Center"
                SnapsToDevicePixels="True"
                UseLayoutRounding="True"
                ItemTemplateSelector="{StaticResource TemplateSelector}"
                ItemContainerStyleSelector="{StaticResource StyleSelector}">
                <!-- todo: move resizing parts to separate control --> 
                <ItemsControl.Resources>
                    <!-- ReSharper disable once Xaml.RedundantResource -->
                    <DataTemplate x:Key="PinTemplate" DataType="{x:Type viewModels:PinTemplate}">
                        <controls:CanvasObjectControl 
                            CanvasObject="{Binding}"
                            SelectedCanvasObject="{Binding DataContext.SelectedObject, ElementName=Window}"
                            DragDown="CanvasItemMouseDown"
                            DragUp="CanvasItemMouseUp" 
                            DragMove="CanvasItemMouseMove"
                            ResizeDown="CanvasItemResizeMouseDown" 
                            ResizeUp="CanvasItemResizeMouseUp"
                            ResizeMove="CanvasItemResizeMouseMove"
                            Width="{Binding Width, Converter={StaticResource CellSizeConverter}}"
                            Height="{Binding Height, Converter={StaticResource CellSizeConverter}}">
                            <Border
                                Margin="1"
                                Background="#f5f5f5"
                                BorderThickness="1"
                                BorderBrush="Black"
                                CornerRadius="1"/>
                        </controls:CanvasObjectControl>
                    </DataTemplate>
                    <!-- ReSharper disable once Xaml.RedundantResource -->
                    <DataTemplate x:Key="DeadZoneTemplate" DataType="{x:Type viewModels:DeadZoneTemplate}">
                        <controls:CanvasObjectControl 
                            CanvasObject="{Binding}"
                            SelectedCanvasObject="{Binding DataContext.SelectedObject, ElementName=Window}"
                            DragDown="CanvasItemMouseDown"
                            DragUp="CanvasItemMouseUp" 
                            DragMove="CanvasItemMouseMove"
                            ResizeDown="CanvasItemResizeMouseDown" 
                            ResizeUp="CanvasItemResizeMouseUp"
                            ResizeMove="CanvasItemResizeMouseMove"
                            Width="{Binding Width, Converter={StaticResource CellSizeConverter}}"
                            Height="{Binding Height, Converter={StaticResource CellSizeConverter}}">
                            <Border Background="#40800000" BorderBrush="Black" BorderThickness="1"/>
                        </controls:CanvasObjectControl>
                    </DataTemplate>
                    <!-- ReSharper disable once Xaml.RedundantResource -->
                    <Style x:Key="PinContainerStyle" d:DataContext="{d:DesignInstance viewModels:PinTemplate}">
                        <Setter Property="Canvas.Left"
                                Value="{Binding X, Converter={StaticResource CellOffsetConverter}}"/>
                        <Setter Property="Canvas.Top"
                                Value="{Binding Y, Converter={StaticResource CellOffsetConverter}}"/>
                    </Style>
                    <!-- ReSharper disable once Xaml.RedundantResource -->
                    <Style x:Key="DeadZoneContainerStyle" d:DataContext="{d:DesignInstance viewModels:DeadZoneTemplate}">
                        <Setter Property="Canvas.Left"
                                Value="{Binding X, Converter={StaticResource CellOffsetConverter}}"/>
                        <Setter Property="Canvas.Top"
                                Value="{Binding Y, Converter={StaticResource CellOffsetConverter}}"/>
                    </Style>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas>
                            <Canvas.Background>
                                <VisualBrush Viewport="0,0,13,13" ViewportUnits="Absolute" Viewbox="0,0,13,13" ViewboxUnits="Absolute"
                                             TileMode="Tile" opts:Freeze="True">
                                    <VisualBrush.Visual>
                                        <Border Background="#959595" SnapsToDevicePixels="True" BorderThickness="1 1 0 0" BorderBrush="#6f6f6f"
                                                Width="13" Height="13" UseLayoutRounding="True"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Canvas.Background>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemsSource>
                    <CompositeCollection>
                        <CollectionContainer Collection="{Binding Source={StaticResource DeadZonesCollection}}"/>
                        <CollectionContainer Collection="{Binding Source={StaticResource PinsCollection}}"/>
                    </CompositeCollection>
                </ItemsControl.ItemsSource>
            </ItemsControl>
            <Border BorderBrush="Black" BorderThickness="1,0,0,1" Grid.Column="1" Grid.Row="0" UseLayoutRounding="True">
                <TreeView BorderThickness="0" SelectedItemChanged="TreeViewItemSelected" Name="ItemsTreeView">
                    <TreeViewItem Header="Info" Tag="INFO"/>
                    <TreeViewItem Header="Pins"
                                  IsExpanded="True" 
                                  ItemsSource="{Binding Source={StaticResource PinsCollection}}"
                                  DisplayMemberPath="DisplayName"/>
                    <TreeViewItem Header="Dead Zones" 
                                  IsExpanded="True" 
                                  ItemsSource="{Binding Source={StaticResource DeadZonesCollection}}"
                                  DisplayMemberPath="DisplayName">
                    </TreeViewItem>
                </TreeView>
            </Border>
            <Border BorderBrush="Black" BorderThickness="1,0,0,0" Grid.Column="1" Grid.Row="1" UseLayoutRounding="True">
                <ContentControl ContentTemplateSelector="{StaticResource PropertyGridTemplateSelector}"
                                Content="{Binding SelectedObject}">
                    <ContentControl.Resources>
                        <!-- ReSharper disable once Xaml.RedundantResource -->
                        <DataTemplate x:Key="EmptyTemplate"/>
                        <!-- ReSharper disable once Xaml.RedundantResource -->
                        <DataTemplate x:Key="InfoTemplate">
                            <Grid Margin="4,2" DataContext="{Binding DataContext, ElementName=Window}">
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Margin" Value="0,2"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Width"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Height"/>
                                <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding Width}"/>
                                <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Height}"/>
                            </Grid>
                        </DataTemplate>
                        <DataTemplate x:Key="PinTemplate" DataType="viewModels:PinTemplate">
                            <StackPanel Grid.IsSharedSizeScope="True">
                                <StackPanel.Resources>
                                    <DataTemplate DataType="viewModels:ValuesFunctionTemplate" x:Key="ValuesFunctionTemplate">
                                        <!-- todo: simulation preview -->
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="TitleColumn"/>
                                                    <ColumnDefinition Width="10"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Type"/>
                                                <ComboBox Grid.Row="0" Grid.Column="2" SelectedItem="{Binding Type}">
                                                    <valuesFunctions:ValuesFunctionType>Static</valuesFunctions:ValuesFunctionType>
                                                    <valuesFunctions:ValuesFunctionType>Periodic</valuesFunctions:ValuesFunctionType>
                                                    <valuesFunctions:ValuesFunctionType>RepeatingSequence</valuesFunctions:ValuesFunctionType>
                                                    <valuesFunctions:ValuesFunctionType>Aggregate</valuesFunctions:ValuesFunctionType>
                                                </ComboBox>
                                            </Grid>
                                            <StackPanel Visibility="{Binding Type, Converter={StaticResource ParEqualityToVisibilityConverter}, 
                                                ConverterParameter={x:Static valuesFunctions:ValuesFunctionType.Static},
                                                FallbackValue=Collapsed}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="TitleColumn"/>
                                                        <ColumnDefinition Width="10"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Value"/>
                                                    <ComboBox Grid.Row="0" Grid.Column="2" SelectedItem="{Binding StaticValue}">
                                                        <system:Boolean>False</system:Boolean>
                                                        <system:Boolean>True</system:Boolean>
                                                    </ComboBox>
                                                </Grid>
                                            </StackPanel>
                                            <StackPanel Visibility="{Binding Type, Converter={StaticResource ParEqualityToVisibilityConverter}, 
                                                ConverterParameter={x:Static valuesFunctions:ValuesFunctionType.Periodic},
                                                FallbackValue=Collapsed}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="TitleColumn"/>
                                                        <ColumnDefinition Width="10"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="On"/>
                                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Off"/>
                                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Skip"/>
                                                    <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding PeriodicOn}"/>
                                                    <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding PeriodicOff}"/>
                                                    <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding PeriodicSkip}"/>
                                                </Grid>
                                            </StackPanel>
                                            <StackPanel Visibility="{Binding Type, Converter={StaticResource ParEqualityToVisibilityConverter}, 
                                                ConverterParameter={x:Static valuesFunctions:ValuesFunctionType.RepeatingSequence},
                                                FallbackValue=Collapsed}">
                                                <TextBlock Text="NOT SUPPORTED NOW"/>
                                            </StackPanel>
                                            <StackPanel Visibility="{Binding Type, Converter={StaticResource ParEqualityToVisibilityConverter}, 
                                                ConverterParameter={x:Static valuesFunctions:ValuesFunctionType.Aggregate},
                                                FallbackValue=Collapsed}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="TitleColumn"/>
                                                        <ColumnDefinition Width="10"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Operation"/>
                                                    <ComboBox Grid.Row="0" Grid.Column="2" SelectedItem="{Binding AggregateOperation}">
                                                        <valuesFunctions:AggregateOperation>Or</valuesFunctions:AggregateOperation>
                                                        <valuesFunctions:AggregateOperation>And</valuesFunctions:AggregateOperation>
                                                        <valuesFunctions:AggregateOperation>Xor</valuesFunctions:AggregateOperation>
                                                    </ComboBox>
                                                </Grid>
                                                <Button Click="AddAggregatePart">Add</Button>
                                                <ListBox ItemsSource="{Binding AggregateParts}" IsSynchronizedWithCurrentItem="True"
                                                         DisplayMemberPath="DisplayName"/>
                                                <ContentPresenter ContentTemplate="{DynamicResource ValuesFunctionTemplate}"
                                                                  Content="{Binding AggregateParts/}"
                                                                  Visibility="{Binding AggregateParts/, Converter={StaticResource NullToVisibilityConverter}}"
                                                                  Margin="10,0,0,0"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </StackPanel.Resources>
                                <Grid Margin="4,2,4,0">
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Margin" Value="0,2"/>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="TitleColumn"/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Name"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="X"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Y"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Width"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Height"/>
                                    <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding Name}"/>
                                    <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding X}"/>
                                    <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding Y}"/>
                                    <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding Width}"/>
                                    <TextBox Grid.Row="4" Grid.Column="2" Text="{Binding Height}"/>
                                </Grid>
                                <Border Style="{StaticResource Separator}"/>
                                <TextBlock Text="Values Function:" Margin="4,2,4,2"/>
                                <ContentControl ContentTemplate="{StaticResource ValuesFunctionTemplate}"
                                                Content="{Binding ValuesFunction}"
                                                Margin="4,0,4,4"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="DeadZoneTemplate" DataType="viewModels:DeadZoneTemplate">
                            <Grid Margin="4,2">
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Margin" Value="0,2"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="X"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Y"/>
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Width"/>
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Height"/>
                                <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding X}"/>
                                <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Y}"/>
                                <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding Width}"/>
                                <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding Height}"/>
                            </Grid>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Border>
        </Grid>
    </DockPanel>
</Window>
